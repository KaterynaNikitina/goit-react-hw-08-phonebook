{"version":3,"file":"static/js/338.79144683.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContactThunk } from 'redux/contactsOperations';\nimport { selectUserContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix';\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectUserContacts);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const form = ev.currentTarget;\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    const isExistingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase() \n    );\n    if (isExistingContact) {\n      Notify.failure(`${name} is already in contacts list!`);\n      return;\n    }\n\n    dispatch(\n      addNewContactThunk({\n        name,\n        number,\n      })\n    );\n    ev.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <p>Name:</p>\n        <input name=\"contactName\" type=\"text\" required></input>\n      </label>\n      <br />\n      <label>\n        <p>Number:</p>\n        <input name=\"contactNumber\" type=\"text\" required></input>\n      </label>\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 368px;\n  margin-left: auto;\n  margin-right: auto;\n  /* height: 32px; */\n  border-radius: 4px;\n  font-size: 20px;\n  padding: 6px 16px 6px;\n  margin-top: 16px;\n`;","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        value={filter}\n        placeholder=\"enter name\"\n        onChange={handleChange}\n      ></Input>\n    </Label>\n  );\n};\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\nfont-size: 20px;\nmargin-bottom: 16px;\nmargin-top: 16px;\ndisplay: flex;\njustify-content: space-between\n`\n\nexport const ItemBtn = styled.button`\nfont-size: 20px;\nmargin-left: 24px;\nborder-radius: 4px;\nborder: none;\ncursor: pointer;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  &:hover {\n    background-color: blue;\n    color: #fff;\n  }\n`","import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsOperations';\nimport PropTypes from 'prop-types';\nimport { Item, ItemBtn } from './ContactItem.styled';\n\nconst ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContactThunk(id));\n  }\n  return (\n    <Item>\n      {name}: {number}\n      <ItemBtn\n        onClick={() => {handleDeleteContact(id)}}\n      >\n        Delete\n      </ItemBtn>\n    </Item>\n  );\n};\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n})\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;\n\n\n/* align-items: flex-end; */\n`","import ContactItem  from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List } from './ContactsList.styled';\nimport { useEffect } from 'react';\nimport { getAllContactsThunk } from 'redux/contactsOperations';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  selectAuthentificated,\n  selectUserContacts,\n  selectContactsLoading,\n  selectContactError,\n  selectFilter,\n  // selectFilteredContacts,\n} from 'redux/selectors';\n// import { Notify } from 'notiflix';\n\nconst ContactsList = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsLoading);\n  const error = useSelector(selectContactError);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch(selectFilter);\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(getAllContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const visibleContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const formattedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts?.length > 0\n  ? (contacts.filter(contact => contact.name.toLowerCase().includes(formattedFilter)))\n  : [];\n\n  return (\n\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>Ooops, something went wrong...</p>}\n      <List>\n       {!visibleContacts\n        ? <p>Your Phonebook is empty. Add new contacts</p>\n        : filteredContacts.length === 0 \n        ? (`There is no contct ${filter} in your Phonebook`)\n        : filteredContacts.map(contact => {\n          return <ContactItem key={contact.id} contact={contact}/>\n          })\n       }\n      </List>\n    </div>\n  );\n}\n\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n\n  return (\n    <section>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactsList />\n</section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","contacts","useSelector","selectUserContacts","_jsxs","onSubmit","ev","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","find","contact","toLowerCase","Notify","concat","addNewContactThunk","target","reset","children","_jsx","type","required","Label","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","filter","selectFilter","placeholder","onChange","_ref","setFilter","Item","ItemBtn","_ref$contact","id","onClick","deleteContactThunk","List","authentificated","selectAuthentificated","isLoading","selectContactsLoading","error","selectContactError","useEffect","getAllContactsThunk","visibleContacts","Array","isArray","length","formattedFilter","filteredContacts","includes","Loader","map","ContactItem","ContactForm","Filter","ContactsList"],"sourceRoot":""}